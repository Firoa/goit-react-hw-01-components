{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendListItem/FriendListItem.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Transactions/TransactionsHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/Transactions/TransactionsHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","description","src","alt","statsItem","followers","views","likes","Statictics","statictics","title","statistics","statList","map","id","label","percentage","key","item","FriendListItem","isOnline","statusStyle","status","push","statusIsOnline","listItem","join","width","FriendList","friends","friendList","TransactionsHistory","transactions","transaction_history","type","amount","currency","App","user","statisticalData","friendListData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09636f77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profile_description__9Y3PX\",\"name\":\"Profile_name__3kDdc\",\"tag\":\"Profile_tag__Gp-47\",\"location\":\"Profile_location__eWPmt\",\"stats\":\"Profile_stats__39u9e\",\"statsItem\":\"Profile_statsItem__1UBFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"FriendListItem_listItem__f46nd\",\"status\":\"FriendListItem_status__3CLRq\",\"statusIsOnline\":\"FriendListItem_statusIsOnline__1cLxE\",\"avatar\":\"FriendListItem_avatar__1kFUA\",\"name\":\"FriendListItem_name__1xvtM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3HXH2\",\"title\":\"Statistics_title__1lY6v\",\"statList\":\"Statistics_statList__3gWov\",\"item\":\"Statistics_item__1x-Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1BNyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionsHistory_transaction_history__37UAp\"};","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n      <ul className={styles.stats}>\r\n        <li className={styles.statsItem}>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">[{stats.followers}]</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {  \r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),  \r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statictics = ({ statictics, title }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    <ul className={styles.statList}>\r\n      {statictics.map(({ id, label, percentage }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span className=\"label\">{label}</span>\r\n          <span className=\"percentage\">{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatictics.propTypes = {\r\n  title: PropTypes.string,\r\n  statictics: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statictics;\r\n","import React from 'react';\r\nimport styles from './FriendListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, id, isOnline }) => {\r\n  let statusStyle = [styles.status];\r\n  isOnline && statusStyle.push(styles.statusIsOnline);\r\n  return (\r\n    <li key={id} className={styles.listItem}>\r\n      <span className={statusStyle.join(' ')}></span>\r\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport styles from './FriendList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(({ avatar, name, id, isOnline }) => {\r\n        return <FriendListItem\r\n          avatar={avatar}\r\n          isOnline={isOnline}\r\n          name={name}\r\n          id={id}\r\n        />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport styles from \"./TransactionsHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionsHistory = ({ transactions }) => (\r\n  <table className={styles.transaction_history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {transactions.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionsHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default TransactionsHistory;\r\n","\r\nimport React, { Fragment } from \"react\";\r\nimport Profile from './components/Profile/Profile';\r\nimport user from './components/Profile/user.json';\r\nimport Statictics from './components/Statistics/Statistics';\r\nimport statisticalData from './components/Statistics/statistical-data.json';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport friendListData from './components/FriendList/friends.json';\r\nimport TransactionsHistory from './components/Transactions/TransactionsHistory';\r\nimport transactions from './components/Transactions/transactions.json';\r\n\r\nconst App = () => (\r\n    <Fragment>\r\n    <Profile {...user} />,\r\n    <Statictics statictics={statisticalData} title=\"Upload stats\" />\r\n    <FriendList friends={friendListData} />\r\n    <TransactionsHistory transactions={transactions} />\r\n    </Fragment>\r\n);\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport App from './App.js'\n\nReactDOM.render(\nApp(),\ndocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}